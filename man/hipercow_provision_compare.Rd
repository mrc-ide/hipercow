% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provision.R
\name{hipercow_provision_compare}
\alias{hipercow_provision_compare}
\title{Compare installations}
\usage{
hipercow_provision_compare(
  curr = 0,
  prev = -1,
  driver = NULL,
  root = NULL,
  platform = "windows"
)
}
\arguments{
\item{curr}{The previous installation to compare against. Can be a
name (see \link{hipercow_provision_list} to get names), a negative
number where \code{-n} indicates "\code{n} installations ago" or a
positive number where \code{n} indicates "the \code{n}th
installation". The default value of 0 corresponds to the current
installation.}

\item{prev}{The previous installation to compare against. Can be a
name (see \link{hipercow_provision_list} to get names), a negative
number where \code{-n} indicates "\code{n} installations ago" or a
positive number where \code{n} indicates "the \code{n}th installation".
The default of -1 indicates the previous installation. Must
refer to an installation before \code{curr}. Use \code{NULL} or \code{-Inf} if
you want to compare against the empty installation.}

\item{driver}{The name of the driver to use, or you can leave
blank if only one is configured (this will be typical).}

\item{root}{The hipercow root}

\item{platform}{The operating system that this provision should
target. The default is \code{windows} as so far this has been the
platform we have supported in DIDE. But as of Hipercow 1.0.54
or later, the windows driver now also supports linux nodes
connected to the MS-HPC headnode. To target jobs onto the linux
nodes, you will need to provision a linux package repo, with
\code{platform = 'linux'}. This is new and experimental, and the
interface may change.}
}
\value{
An object of class \code{conan_compare}, which can be printed
nicely.
}
\description{
Compare installations performed into your libraries by conan.
}
\examples{
cleanup <- hipercow_example_helper()
hipercow_provision("pkgdepends", refs = "knitr")
hipercow_provision("pkgdepends", refs = "data.table")
hipercow_provision_compare()

cleanup()
}
