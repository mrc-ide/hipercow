% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provision.R
\name{hipercow_provision_list}
\alias{hipercow_provision_list}
\alias{hipercow_provision_check}
\title{List installations}
\usage{
hipercow_provision_list(driver = NULL, root = NULL, platform = "windows")

hipercow_provision_check(
  method = NULL,
  ...,
  driver = NULL,
  environment = "default",
  root = NULL,
  platform = "windows"
)
}
\arguments{
\item{driver}{The name of the driver to use, or you can leave
blank if only one is configured (this will be typical).}

\item{root}{The hipercow root}

\item{platform}{The operating system that this provision should
target. The default is \code{windows} as so far this has been the
platform we have supported in DIDE. But as of Hipercow 1.0.54
or later, the windows driver now also supports linux nodes
connected to the MS-HPC headnode. To target jobs onto the linux
nodes, you will need to provision a linux package repo, with
\code{platform = 'linux'}. This is new and experimental, and the
interface may change.}

\item{method}{The provisioning method to use, defaulting to
\code{NULL}, which indicates we should try and detect the best
provisioning mechanism for you; this should typically work well
unless you are manually adding packages into your library (see
Details). If given, must be one of \code{auto}, \code{pkgdepends},
\code{script} or \code{renv}; each of these are described in the Details
and in \code{vignette("packages")}.}

\item{...}{Arguments passed through to conan. See Details.}

\item{environment}{The name of the environment to provision (see
\link{hipercow_environment_create} for details).}
}
\value{
A \link{data.frame} with columns:
\itemize{
\item \code{name}: the name of the installation. This might be useful with
\code{conan_compare}
\item \code{time}: the time the installation was started
\item \code{hash}: the installation hash
\item \code{method}: the method used for the installation
\item \code{args}: the arguments to the installation (as a list column)
\item \code{current}: if using \code{hipercow_provision_check}, does this
installation match the arguments provided?
}

This object also has class \code{conan_list} so that it prints nicely,
but you can drop this with \code{as.data.frame}.
}
\description{
List previous successful installations of this hipercow root.
}
\examples{
cleanup <- hipercow_example_helper()
writeLines("data.table", "pkgdepends.txt")

# Before any installation has happened:
hipercow_provision_list()
hipercow_provision_check()

# After installation:
hipercow_provision()
hipercow_provision_list()
hipercow_provision_check()

# After a different installation:
hipercow_provision("pkgdepends", refs = "knitr")
hipercow_provision_list()
hipercow_provision_check()

cleanup()
}
